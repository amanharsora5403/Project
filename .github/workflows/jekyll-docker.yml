name: Jekyll CI with Docker

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: self-hosted  # Use your self-hosted runner.

    steps:
    # Step 1: Checkout the code from the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Install Docker on the self-hosted runner
    - name: Install Docker
      run: |
        sudo apt-get update
        sudo apt-get install -y docker.io
        sudo systemctl enable --now docker
        sudo usermod -aG docker $USER
        docker --version

    # Step 3: Log in to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}  # Your Docker Hub username stored as a secret
        password: ${{ secrets.DOCKER_PASSWORD }}  # Your Docker Hub password stored as a secret

    # Step 4: Build and push the Docker image for the Jekyll site
    - name: Build & Push Docker image
      uses: mr-smithers-excellent/docker-build-push@v6
      with:
        image: amanharsora543211/jekyll-site  # Your Docker image name
        tags: latest
        registry: docker.io
        username: ${{ secrets.DOCKER_USERNAME }}  # Docker Hub username stored as a secret
        password: ${{ secrets.DOCKER_PASSWORD }}  # Docker Hub password stored as a secret
        enableBuildKit: true  # Optional: Enable Docker BuildKit

    # Step 5: Run the Docker container
    - name: Run Docker container
      run: |
        # Pull the Docker image from Docker Hub
        docker pull amanharsora543211/newone:latest .  # Ensure the image exists and the tag is correct

        # Stop and remove any running container with the same name (if any)
        docker stop newone || true
        docker rm newone || true

        # Run the Docker container
        docker run -d -p 4000:4000 --name newone amanharsora543211/newone:latest .

    # Step 6: Check Docker container logs
    - name: Check Docker container logs
      run: docker logs newone
